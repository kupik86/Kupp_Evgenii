# __autor__ = Kupp Evgenii

# Задача 5
# Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например
# «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7
# копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки
# остался тот же). Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

# Решение
import random

# price = [round(random.uniform(50, 100), 2) for i in range(20)]   # можно как через генератор формировать список
price = [90.96, 68.28, 91.4, 73, 83.89, 51.82, 61.7, 73.91, 93, 82.03, 75.0, 81, 55.88, 74.12, 97.09, 88,
         56.86]  # можно вручную задать список цен
print(price)
price_monetary = []
for i in price:
    i = str(i)  # привел элемент списка к строковому типу
    f_ind = i.find('.')  # находим индекс точки
    if f_ind != -1:  # вводим условие при котором определяется вещественное число или нет
        whole_num = i[:f_ind]
        fractional_num = (i[f_ind + 1:]).zfill(2)
    else:
        whole_num = i
        fractional_num = '00'
    price_update = f'«{whole_num} руб {fractional_num} коп»'  # приводим к отображению результата по условиям задачи
    price_monetary.append(price_update)
print(id(price_monetary))  # адрес объекта списка
print(' '.join(price_monetary))  # выводим на экран цены по заданию
price_monetary.sort()  # сортируем цены по возрастанию
print(' '.join(price_monetary))  # выводим цены на экран отсортированные
print(id(price_monetary))  # проверяем адрес объекта списка, остался ли тот же ?
new_price = sorted(price_monetary, reverse=True)  # создаем новый список с ценами по убыванию
expensive_goods = new_price[:5]
print(' '.join(expensive_goods))  # выводим цены пяти самых дорогих товаров
print(' '.join(
    sorted(expensive_goods, reverse=False)))  # выводим цены самых дорогих товаров по возрастанию, написав минимум кода
